Q: Are all the tickets the same price?
Q: Taxes and other fees
Q: Do users need to buy tickets for multiple shows in the same cart, do we need a cart system?

SDD Overview:
1. Introduction
2. Design considerations
3. Arch overview
4. Data Design
5. System architecture
6. Use case walkthrough

<Team Name>
Los Portales app
Software Design Document

Names: Jeru Sanders, Garry Callis, Steven ???, Mike ???
Date: 3/27/2022

---


Overview:
There are three main components:
	App:
		renderer(Renderer): The single instance of the Renderer
		server(ServerInterOp): The single instance of the ServerInterOp
		showManager(ShowManager): The single instance of the ShowManager

	Renderer: Relates to the visual UI 
		The screens are:
			SCREEN_LOGIN:
				The user or admin logs in
			SCREEN_SHOW_LIST:
				Shows all the available shows in a list (icon|title|date)
			SCREEN_SEAT_LIST: 
				Shows a grid of seats where the user can select multiple seats by touching/clicking them, then purchase them by clicking a buy button. Available seats are in white, unavailable ones are grey, selected are yellow.
			SCREEN_PAYMENT_INFO:
				Shows a screen where the user inputs their credit card, CSV, and exp date, then clicks buy. There should be visual icons of each of the major card providers, with all but MasterCard and VISA crossed out. (TODO: Figure how know what provider a card came from)
				(TODO: Figure out how to avoid two people paying at the same time for the same seat)
				Optionally: User can save or pick a saved card
				Optionally: Cash payment
			SCREEN_RECIPT:
				Just shows the seat and show you paid with a green check mark or something. Has a button to go back to the show list.
			SCREEN_SHOW_EDITOR:
				A screen that admins get to from the seat list, that allows them to modify the show name, date, icon. (TODO: How do get icons???)
			SCREEN_SEAT_EDITOR:
				A screen that admins get to from the seat list, that allows them to modify the selected seats price.
			SCREEN_REPORT:
				A screen that dumps a huge filterable log of all the events
		currentScreen(int): The current screen

		changeScreen(newScreen:int): Changes the screen
		updateScreen(): Updates the screen



	ServerInterOp: Interacts with the server and database
		currentUserId(int):
			The id of the currently logged in users, 0=nobody
		isAdmin(bool): If you're the admin

		loadShowData():void: Attempts to update all show data
		attemptSignIn(userName:String, pass:String):void: Attempts to sign in, changes currentUserId and calls changeScreen
		chargeCreditCard(number:String, csv:String, expDate:String, price:float):void:
			Attempts to charge card, and calls changeScreen based off what happen.



	ShowManager: Contains the show information and app state
		shows(Show[]): The list of shows
		currentShowIndex(int): The currently selected show
		currentSeatIndices(int[]): The currently selected seats

		selectShow(showInputs:int):void: Changes the currentShowIndex
		selectSeat(seatIndex:int):void: Selects or delects a seat


	Show: Contains the name of show, date, and seats
		id(int): A unique id
		name(String): A name
		date(Date): A date
		seats(Seats[]): The list of seats


	Seat: Contains the price and owner of the seat
		price(int): The price of the seat
		ownerId(int): The current owner of the seat, 0 = unowned
